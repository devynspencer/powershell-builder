<?xml version="1.0" encoding="utf-8"?>
<plasterManifest
    schemaVersion="1.1"
    templateType="Item"
    xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1"
    >
  <metadata>
    <name>BasicModule</name>
    <id>2fc4a26d-9404-4b53-8df8-8fbfa674577f</id>
    <version>0.0.0</version>
    <title>PowerShell Module Template (Basic)</title>
    <description>Used to generate a basic PowerShell module with modern build features and testing.</description>
    <author>Devyn Spencer</author>
    <tags>Module, Basic</tags>
  </metadata>
  <parameters>
    <parameter
        name="ModuleName"
        type="text"
        prompt="Enter the name of the module"
        />

    <parameter
        name="ModuleDescription"
        type="text"
        prompt="Enter a description of the module"
        />

    <parameter
        name="ModuleVersion"
        type="text"
        prompt="Enter the starting module version number"
        default="0.0.0"
        />

    <parameter
        name="ModuleAuthor"
        type="user-fullname"
        prompt="Enter the full name of the module author"
        store="text"
        />

    <parameter
        name="CompanyName"
        type="text"
        prompt="Enter a company/organization name to associate with the module"
        />

    <parameter
        name="PowerShellVersion"
        type="text"
        prompt="Enter the PowerShell version required by the module"
        default="5.1"
        />

    <parameter
        name="ModuleDirectories"
        type="multichoice"
        prompt="Select subdirectories to add to module"
        default="0,1"
        store="text"
        >
      <choice
          label="p&amp;ublic"
          help="Include a public (exported) functions directory"
          value="public"
          />
      <choice
          label="p&amp;rivate"
          help="Include a private (helper) functions directory"
          value="private"
          />
      <choice
          label="&amp;classes"
          help="Include a classes directory (PowerShell classes require version 5.0 or greater)"
          value="classes"
          />
      <choice
          label="&amp;lib"
          help="Include an external scripts directory"
          value="lib"
          />
      <choice
          label="&amp;bin"
          help="Include a binary executables directory"
          value="bin"
          />
      <choice
          label="&amp;data"
          help="Include a data directory"
          value="data"
          />
      <choice
          label="&amp;templates"
          help="Include a templates directory"
          value="templates"
          />
    </parameter>

    <parameter
        name="License"
        type="choice"
        prompt="Select a license (see http://choosealicense.com):"
        default="1"
        store="text"
        >
      <choice
          label="&amp;None"
          help="No license."
          value="None"
          />
      <choice
          label="&amp;MIT"
          help="Adds an MIT license file."
          value="MIT"
          />
    </parameter>

    <parameter
        name="Options"
        type="multichoice"
        prompt="Select one or more of the following tooling options:"
        default="1,2,4"
        store="text"
        >
      <choice
          label="&amp;None"
          help="No tooling options specified."
          value="None"
          />
      <choice
          label="&amp;Git"
          help="Adds a .gitignore file, a .gitattributes file, and scripted commit hooks."
          value="Git"
          />
      <choice
          label="&amp;Testing"
          help="Adds a tests directory and Pester tests for module manifest, boilerplate, and structure."
          value="Testing"
          />
      <choice
          label="&amp;Analyzer"
          help="Adds script analysis support using PSScriptAnalyzer."
          value="Analyzer"
          />
      <choice
          label="&amp;Build"
          help="Add build script and support tools."
          value="Build"
          />
      <choice
          label="&amp;Documentation"
          help="Adds support for generating documentation and external help files using PlatyPS."
          value="Documentation"
          />
    </parameter>

    <parameter
        name="PackageSourceName"
        type="text"
        prompt="Enter a name for the production NuGet package source"
        default="InternalPackages"
        />

    <parameter
        name="PackageSourceUri"
        type="text"
        prompt="Enter the URI of the production NuGet package source"
        />

    <parameter
        name="GitHubUserName"
        type="text"
        prompt="Enter a GitHub account name for package registry auth, or specify none to skip. NuGet config env variable syntax permitted, i.e %GITHUB_USERNAME%"
        />

    <parameter
        name="GitHubPackagesToken"
        type="text"
        prompt="Enter a GitHub account token for package registry auth, or specify none to skip. NuGet config env variable syntax permitted, i.e %GITHUB_PACKAGES_TOKEN%"
        />

    <parameter
        name="PublicPackageSourceName"
        type="text"
        prompt="Enter a name for the external NuGet package source, or specify none to skip"
        default="nuget.org"
        />

    <parameter
        name="PublicPackageSourceUri"
        type="text"
        prompt="Enter the URI of the external NuGet package source, or specify none to skip"
        default="https://api.nuget.org/v3/index.json"
        />

    <parameter
        name="StagingPackageSourcePath"
        type="text"
        prompt="Enter the filesystem path for staging NuGet packages prior to publishing"
        default="temp\staging"
        />

    <parameter
        name="Editor"
        type="choice"
        prompt="Select an editor for better integration and consistent formatting:"
        default="1"
        store="text"
        >
      <choice
          label="&amp;None"
          help="No editor specified."
          value="None"
          />
      <choice
          label="&amp;Visual Studio Code"
          help="Use Visual Studio Code."
          value="VSCode"
          />
    </parameter>
  </parameters>

  <content>
    <message>Building module [$PLASTER_PARAM_ModuleName] from template [$PLASTER_TemplatePath]</message>

    <newModuleManifest
        destination="${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.psd1"
        rootModule="${PLASTER_PARAM_ModuleName}.psm1"
        moduleVersion="$PLASTER_PARAM_ModuleVersion"
        author="$PLASTER_PARAM_ModuleAuthor"
        companyName="$PLASTER_PARAM_CompanyName"
        description="$PLASTER_PARAM_ModuleDescription"
        powerShellVersion="$PLASTER_PARAM_PowerShellVersion"
        encoding="UTF8-NoBOM"
        />

    <file
        source="ModuleName.psm1"
        destination="${PLASTER_PARAM_ModuleName}.psm1"
        />

    <message>Creating module subdirectories: $PLASTER_PARAM_ModuleDirectories</message>

    <file
        source=""
        destination="${PLASTER_PARAM_ModuleName}\public"
        condition="$PLASTER_PARAM_ModuleDirectories -contains 'public'"
        />

    <file
        source=""
        destination="${PLASTER_PARAM_ModuleName}\private"
        condition="$PLASTER_PARAM_ModuleDirectories -contains 'private'"
        />

    <file
        source=""
        destination="${PLASTER_PARAM_ModuleName}\classes"
        condition="$PLASTER_PARAM_ModuleDirectories -contains 'classes'"
        />

    <file
        source=""
        destination="${PLASTER_PARAM_ModuleName}\lib"
        condition="$PLASTER_PARAM_ModuleDirectories -contains 'lib'"
        />

    <file
        source=""
        destination="${PLASTER_PARAM_ModuleName}\bin"
        condition="$PLASTER_PARAM_ModuleDirectories -contains 'bin'"
        />

    <file
        source=""
        destination="${PLASTER_PARAM_ModuleName}\data"
        condition="$PLASTER_PARAM_ModuleDirectories -contains 'data'"
        />

    <file
        source=""
        destination="${PLASTER_PARAM_ModuleName}\templates"
        condition="$PLASTER_PARAM_ModuleDirectories -contains 'templates'"
        />

    <message>Creating project files</message>

    <templateFile
        source="README.md"
        destination=""
        />

    <templateFile
        source="LICENSE"
        destination=""
        condition="$PLASTER_PARAM_License -eq 'MIT'"
        />

    <templateFile
        source="ScriptAnalyzerSettings.psd1"
        destination=""
        condition="$PLASTER_PARAM_Options -contains 'Analyzer'"
        />

    <file
        source="vscode-settings.json"
        destination=".vscode\settings.json"
        condition="$PLASTER_PARAM_Editor -eq 'VSCode'"
        />

    <message>Creating packaging files</message>

    <templateFile
        source="nuget.config.erb"
        destination="nuget.config"
        />

    <message>Module generated at [$PLASTER_DestinationPath]</message>
  </content>
</plasterManifest>
